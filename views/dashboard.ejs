<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Server - DNMS</title>
    <!-- HEAD -->
    <%- include('partials/head') %>
</head>

<body class="antialiased">
    <div class="page">
        <!-- HEADER  -->
        <%- include('partials/header', {overlap: true}) %>

        <div class="content">
            <div class="container-xl">
                <!-- PAGE HEADER  -->
                <div class="page-header d-print-none">
                    <div class="row align-items-center">
                        <div class="col">
                            <!-- Page pre-title -->
                            <div class="page-pretitle">Dashboard</div>
                            <div class="page-pretitle">
                                <h2 class="page-title">
                                    <% if(locals.server){ %>
                                    <%= server.name %> - <%= server.comment %> (<%= server.connectTo %>)
                                    <% } %>
                                </h2>
                            </div>
                        </div>
                        <!-- Page title actions -->

                    </div>
                </div>
                <!-- CONTENT  -->
                <div class="row row-deck row-cards">
                    <!-- CPU LOAD WIDGET  -->
                    <div class="col-sm-6 col-lg-3">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex align-items-center">
                                    <div class="subheader">CPU LOAD</div>
                                </div>
                                <div class="d-flex align-items-baseline">
                                    <div class="h1 mb-0 me-2"><span id="cpu-load">0</span> %</div>
                                </div>
                            </div>
                            <div id="chart-cpu-load" class="chart-sm"></div>
                        </div>
                    </div>
                    <!-- RAM WIDGET  -->
                    <div class="col-sm-6 col-lg-3">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex align-items-center">
                                    <div class="subheader">RAM USAGE</div>
                                </div>
                                <div class="d-flex align-items-baseline">
                                    <div class="h1 mb-0 me-2"><span id="used-memory">0 MB</span> / <span
                                            id="total-memory">0 MB</span></div>
                                </div>
                            </div>
                            <div id="chart-ram-usage" class="chart-sm"></div>
                        </div>
                    </div>
                    <!-- UPTIME -->
                    <div class="col-sm-6 col-lg-3">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex align-items-center">
                                    <div class="subheader">UPTIME / DATETIME</div>
                                </div>
                                <div class="h1 mb-2" id="uptime">0D 0H 0M</div>
                                <div class="h3 mb-1 text-muted" id="date-time">01 Jan 1970 00:00:00</div>
                            </div>
                        </div>
                    </div>
                    <!-- DATE -->
                    <div class="col-sm-6 col-lg-3">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex align-items-center">
                                    <div class="subheader">TEMP / VOLTAGE</div>
                                </div>
                                <div class="h1 mb-2"><span id="temperature">-</span> Â°C</div>
                                <div class="h1 mb-1"><span id="voltage">-</span> V</div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row row-card mt-3">
                    <div class="col-lg-2 col-md-3 col-sm-12 mb-3">
                        <!-- IP ADDRESS  -->
                        <div class="card card-sm mb-3">
                            <div class="card-body">
                                <div class="row align-items-center">
                                    <div class="col-auto">
                                        <span class="bg-green text-white avatar">
                                            <svg xmlns="http://www.w3.org/2000/svg"
                                                class="icon icon-tabler icon-tabler-server" width="44" height="44"
                                                viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff" fill="none"
                                                stroke-linecap="round" stroke-linejoin="round">
                                                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                                <rect x="3" y="4" width="18" height="8" rx="3" />
                                                <rect x="3" y="12" width="18" height="8" rx="3" />
                                                <line x1="7" y1="8" x2="7" y2="8.01" />
                                                <line x1="7" y1="16" x2="7" y2="16.01" />
                                            </svg>
                                        </span>
                                    </div>
                                    <div class="col">
                                        <div class="font-weight-medium" id="model">
                                            Unknown
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- SOFTWARE  -->
                        <div class="card card-sm mb-3">
                            <div class="card-body">
                                <div class="row align-items-center">
                                    <div class="col-auto">
                                        <span class="bg-yellow text-white avatar">
                                            <svg xmlns="http://www.w3.org/2000/svg"
                                                class="icon icon-tabler icon-tabler-device-desktop" width="44"
                                                height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke="#ffffff"
                                                fill="none" stroke-linecap="round" stroke-linejoin="round">
                                                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                                <rect x="3" y="4" width="18" height="12" rx="1" />
                                                <line x1="7" y1="20" x2="17" y2="20" />
                                                <line x1="9" y1="16" x2="9" y2="20" />
                                                <line x1="15" y1="16" x2="15" y2="20" />
                                            </svg>
                                        </span>
                                    </div>
                                    <div class="col">
                                        <div class="font-weight-medium" id="version">
                                            -.-
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- DEVICES  -->
                        <div class="card card-sm">
                            <div class="card-body">
                                <div class="row align-items-center">
                                    <div class="col-auto">
                                        <span class="bg-blue text-white avatar">
                                            <svg xmlns="http://www.w3.org/2000/svg"
                                                class="icon icon-tabler icon-tabler-access-point" width="44" height="44"
                                                viewBox="0 0 24 24" stroke-width="1.5" stroke="#FFFFFF" fill="none"
                                                stroke-linecap="round" stroke-linejoin="round">
                                                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                                <line x1="12" y1="12" x2="12" y2="12.01" />
                                                <path d="M14.828 9.172a4 4 0 0 1 0 5.656" />
                                                <path d="M17.657 6.343a8 8 0 0 1 0 11.314" />
                                                <path d="M9.168 14.828a4 4 0 0 1 0 -5.656" />
                                                <path d="M6.337 17.657a8 8 0 0 1 0 -11.314" />
                                            </svg>
                                        </span>
                                    </div>
                                    <div class="col">
                                        <div class="font-weight-medium" id="total-device">
                                            - Device
                                        </div>
                                        <div class="text-muted" id="offline-device">
                                            <span class="badge bg-gray">Scanning</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-10 col-md-9 col-sm-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex flex-row-reverse mb-3">
                                    <div class="dropdown mx-3">
                                        <a class="dropdown-toggle text-muted" href="#" data-bs-toggle="dropdown"
                                            aria-haspopup="true" aria-expanded="false" id="selected-interface">
                                            <% if(locals.interfaces){ %>
                                            <% if(locals.interfaces.length > 0){ %>
                                            <%= locals.interfaces[0].name %>
                                            <% } %>
                                            <% } %>
                                        </a>
                                        <div class="dropdown-menu dropdown-menu-end">
                                            <% if (locals.interfaces){ %>
                                            <% locals.interfaces.forEach(function(interface){ %>
                                            <a class="dropdown-item" href="javascript:void(0)"
                                                onclick="load('<%= interface.name %>')"><%= interface.name %></a>
                                            <% }) %>
                                            <% } %>
                                        </div>
                                    </div>
                                    <div class="mx-1">
                                        <svg xmlns="http://www.w3.org/2000/svg"
                                            class="icon icon-tabler icon-tabler-arrow-big-down" width="44" height="44"
                                            viewBox="0 0 24 24" stroke-width="1.5" stroke="#fc0303" fill="#fc0303"
                                            stroke-linecap="round" stroke-linejoin="round">
                                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                            <path
                                                d="M15 4v8h3.586a1 1 0 0 1 .707 1.707l-6.586 6.586a1 1 0 0 1 -1.414 0l-6.586 -6.586a1 1 0 0 1 .707 -1.707h3.586v-8a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1z" />
                                        </svg>
                                        <strong id="rx-bps"></strong>
                                    </div>
                                    <div class="mx-1">
                                        <svg xmlns="http://www.w3.org/2000/svg"
                                            class="icon icon-tabler icon-tabler-arrow-big-top" width="44" height="44"
                                            viewBox="0 0 24 24" stroke-width="1.5" stroke="#206bc4" fill="#206bc4"
                                            stroke-linecap="round" stroke-linejoin="round">
                                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                            <path
                                                d="M9 20v-8h-3.586a1 1 0 0 1 -.707 -1.707l6.586 -6.586a1 1 0 0 1 1.414 0l6.586 6.586a1 1 0 0 1 -.707 1.707h-3.586v8a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z" />
                                        </svg>
                                        <strong id="tx-bps"></strong>
                                    </div>
                                </div>

                                <div id="chart-traffic"></div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <!-- FOOTER  -->
            <%- include('partials/footer') %>
        </div>
    </div>

    <div class="modal modal-blur fade" id="modal-offline-device" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="modal-title">Offline Device</div>
                    <div id="offline-device-list"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary me-auto" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- JAVASCRIPT  -->
    <%- include('partials/javascript') %>
    <script src="/assets/vendor/tabler/libs/apexcharts/dist/apexcharts.min.js"></script>
    <script>
        // @formatter:off
        var cpuChart = new ApexCharts(document.getElementById('chart-cpu-load'), {
            chart: {
                type: "area",
                fontFamily: 'inherit',
                height: 40.0,
                sparkline: {
                    enabled: true
                },
                animations: {
                    enabled: false
                },
            },
            dataLabels: {
                enabled: false,
            },
            fill: {
                opacity: .16,
                type: 'solid'
            },
            stroke: {
                width: 2,
                lineCap: "round",
                curve: "smooth",
            },
            series: [{
                name: "CPU Load",
                data: []
            }],
            grid: {
                strokeDashArray: 4,
            },
            xaxis: {
                labels: {
                    padding: 0
                },
                tooltip: {
                    enabled: false
                },
                axisBorder: {
                    show: false,
                }
            },
            yaxis: {
                labels: {
                    padding: 4
                },
            },
            colors: ["#206bc4"],
            legend: {
                show: false,
            },
            tooltip: {
                x: {
                    show: false
                }
            },
        });
        cpuChart.render();
        // @formatter:on
    </script>
    <script>
        // @formatter:off
        var memoryChart = new ApexCharts(document.getElementById('chart-ram-usage'), {
            chart: {
                type: "area",
                fontFamily: 'inherit',
                height: 40.0,
                sparkline: {
                    enabled: true
                },
                animations: {
                    enabled: false
                },
            },
            dataLabels: {
                enabled: false,
            },
            fill: {
                opacity: .16,
                type: 'solid'
            },
            stroke: {
                width: 2,
                lineCap: "round",
                curve: "smooth",
            },
            series: [{
                name: "RAM Usage",
                data: []
            }],
            grid: {
                strokeDashArray: 4,
            },
            xaxis: {
                labels: {
                    padding: 0
                },
                tooltip: {
                    enabled: false
                },
                axisBorder: {
                    show: false,
                }
            },
            yaxis: {
                labels: {
                    padding: 4
                },
            },
            colors: ["#206bc4"],
            legend: {
                show: false,
            },
            tooltip: {
                x: {
                    show: false
                }
            },
        });
        memoryChart.render();
        // @formatter:on
    </script>
    <script>
        // @formatter:off

        var trafficChart = new ApexCharts(document.getElementById('chart-traffic'), {
            chart: {
                type: "line",
                fontFamily: 'inherit',
                height: 200,
                sparkline: {
                    enabled: true
                },
                animations: {
                    enabled: false
                },
            },
            dataLabels: {
                enabled: false,
            },
            fill: {
                opacity: .75,
                type: 'solid'
            },
            stroke: {
                width: 3,
                lineCap: "round",
            },
            series: [{
                    name: "Upload",
                    data: []
                },
                {
                    name: "Download",
                    data: []
                }
            ],
            grid: {
                strokeDashArray: 4,
            },
            xaxis: {
                labels: {
                    padding: 0
                },
                tooltip: {
                    enabled: false
                },
                axisBorder: {
                    show: false,
                }
            },
            tooltip: {
                x: {
                    show: false
                }
            },
            yaxis: {
                labels: {
                    padding: 4
                },
            },
            colors: ["#206bc4", "#fc0303"],
            legend: {
                show: false,
            },
        });
        trafficChart.render();
        // @formatter:on
    </script>
    <script>
        docReady(function () {
            load(document.getElementById('selected-interface').textContent.trim());
        });

        var cpuLoadArr = new Array(20).fill().map(() => 0);
        var memoryUsageArr = new Array(20).fill().map(() => 0);
        var txRateArr = new Array(100).fill().map(() => 0);
        var rxRateArr = new Array(100).fill().map(() => 0);

        function serverChanged() {
            window.location.href = "/";
        }

        function load(interface) {
            if (interface === '') {
                return;
            }
            socket.disconnect();
            socket.connect();
            socket.emit('DASHBOARD', {
                interface: interface
            });
            socket.emit('OFFLINE_SCANNER', {
                count: 0
            });

            txRateArr = new Array(100).fill().map(() => 0);
            rxRateArr = new Array(100).fill().map(() => 0);
            document.getElementById('selected-interface').innerHTML = interface;
        }
        socket.on('OFFLINE_SCANNER', function (data) {
            document.getElementById('total-device').innerHTML = data.deviceScanned + ' Devices';
            var offlineDeviceList = `<ol>`;
            data.offlineDevice.forEach(function (device) {
                offlineDeviceList += `<li>${device.name}:${device.comment} - ${device.connectTo}</li>`;
            })
            offlineDeviceList += `</ol>`;
            document.getElementById('offline-device-list').innerHTML = offlineDeviceList;
            if (data.offlineDevice.length > 0) {
                var offlineDeviceButton =
                    `<button class="badge bg-red" data-bs-toggle="modal" data-bs-target="#modal-offline-device">${data.offlineDevice.length} Offline</button>`;
            } else {
                var offlineDeviceButton = `<button class="badge bg-green">Online</button>`;
            }
            document.getElementById('offline-device').innerHTML = offlineDeviceButton;
        });

        socket.on('DASHBOARD', function (data) {
            setValue('version', data.version);
            setValue('temperature', data.temperature);
            setValue('voltage', data.voltage);
            setValue('model', data.model);
            if (data.cpuLoad !== undefined) {
                setValue('cpu-load', data.cpuLoad);
                cpuLoadArr.push(data.cpuLoad);
                cpuChart.updateSeries([{
                    name: 'CPU Load',
                    data: cpuLoadArr.slice(-20)
                }]);
            }
            if (data.usedMemory !== undefined && data.totalMemory !== undefined) {
                document.getElementById('used-memory').innerHTML = bytesToSize(data.usedMemory, 'byte');
                document.getElementById('total-memory').innerHTML = bytesToSize(data.totalMemory, 'byte');
                memoryUsageArr.push(Math.ceil(data.usedMemory / data.totalMemory * 100));
                memoryChart.updateSeries([{
                    name: 'RAM Usage',
                    data: memoryUsageArr.slice(-20)
                }]);
            }
            if (data.rxBitsPerSecond !== undefined && data.txBitsPerSecond !== undefined) {
                document.getElementById('rx-bps').innerHTML = bytesToSize(data.rxBitsPerSecond, 'bps');
                document.getElementById('tx-bps').innerHTML = bytesToSize(data.txBitsPerSecond, 'bps');
                txRateArr.push(Math.ceil(parseInt(data.txBitsPerSecond)));
                rxRateArr.push(Math.ceil(parseInt(data.rxBitsPerSecond)));
                trafficChart.updateSeries([{
                    name: 'Upload',
                    data: txRateArr.slice(-100)
                }, {
                    name: 'Download',
                    data: rxRateArr.slice(-100)
                }]);
            }
            if (data.date !== undefined && data.time !== undefined) {
                var dateArr = data.date.split('/');
                var dateTime = `${dateArr[1]} ${capitalizeFirstLetter(dateArr[0])} ${dateArr[2]} ${data.time}`;
                document.getElementById('date-time').innerHTML = dateTime;
            }
            if (data.uptime !== undefined) {
                function formatDuration(second) {
                    if (second < 0) second = -second;
                    const time = {
                        D: Math.floor(second / 86400),
                        H: Math.floor(second / 3600) % 24,
                        M: Math.floor(second / 60) % 60
                    };
                    return Object.entries(time)
                        .filter(val => val[1] !== 0)
                        .map(([key, val]) => `${val}${key}`)
                        .join(' ');
                };
                document.getElementById('uptime').innerHTML = formatDuration(data.uptime);
            }
        });

        function setValue(id, value) {
            if (value !== undefined && value !== null) {
                document.getElementById(id).innerHTML = value;
            }
        }
    </script>
</body>

</html>